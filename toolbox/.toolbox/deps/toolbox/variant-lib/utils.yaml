tasks:
  exec:
    interactive: true
    parameters:
    - name: exec_dir
      type: string
      default: ""
    - name: subdir
      type: string
      default: ""
    - name: title
      type: string
      default: "CMD"
    - name: cmd
      type: string
      default: "pwd"
    - name: mode
      type: string
      default: default
    - name: flags
      type: string
      default: ""
    - name: verbose
      type: string
      default: "true"
    steps:
    - script: |
        if [ "{{ .mode }}" = "default" ]; then
          CMD={{ list .flags .cmd | join " " | trimSuffix "\n" | trim | quote | replace "\\n" "\n" }}

          if [ "{{.verbose}}" = "true" ]; then
            MESSAGE="---> {{ .title }} :: Executing command:"
            echo -e "\033[0;34m${MESSAGE}\033[0m"
          fi

          echo -e "\033[0;32m${CMD}\033[0m"
          set -e;
          {{list .flags .cmd | join " "}}
        fi

  config:
    description: Config management tasks
    parameters:
    - name: TOOLBOX_CONFIG_DEFINES_FILE_PATH
      default: toolbox/config/source/defines.yaml
    - name: TOOLBOX_CONFIG_DEFINES_PROCESSED_FILE_PATH
      default: toolbox/config/rendered/defines.processed.yaml
    - name: TOOLBOX_CONFIG_SOURCE_DIR
      default: toolbox/config/source
    - name: TOOLBOX_CONFIG_RENDERED_DIR
      default: toolbox/config/rendered
    # - name: TOOLBOX_CONFIG_DIR
      # default: toolbox/config
    - name: TOOLBOX_CONFIG_TEMPLATES_DIR
      default: toolbox/config/templates
    tasks:
      clean:
        steps:
        - task: core.exec
          arguments:
            cmd: rm -fR {{ .TOOLBOX_CONFIG_RENDERED_DIR }}
      process:
        steps:
        - task: core.exec
          arguments:
            cmd: |
              # Process config
              mkdir -p {{ .TOOLBOX_CONFIG_RENDERED_DIR }}
              uniconf -c {{ .TOOLBOX_CONFIG_DEFINES_FILE_PATH }} > {{ .TOOLBOX_CONFIG_DEFINES_PROCESSED_FILE_PATH }} 2> /dev/null;
        tasks:
          dir:
            steps:
            - task: core.exec
              arguments:
                cmd: |
                  # Process config
                  rm -fR {{ .TOOLBOX_CONFIG_RENDERED_DIR }}
                  mkdir -p {{ .TOOLBOX_CONFIG_RENDERED_DIR }}
                  fd -0 "^*.y.?ml" {{ .TOOLBOX_CONFIG_SOURCE_DIR }} -x sh -c "uniconf -c {{ .TOOLBOX_CONFIG_SOURCE_DIR }}/{/} > toolbox/config/rendered/{/} 2> /dev/null";
          path:
            parameters:
            - name: dir
              type: string
            - name: file
              type: string
            - name: path
              type: string
            steps:
            - task: core.exec
              arguments:
                cmd: |
                  mkdir -p {{ .dir }}
                  yq r {{ .TOOLBOX_CONFIG_DEFINES_PROCESSED_FILE_PATH }} {{ .path }} > {{ .dir }}/{{ .file }}

      render:
        steps:
        - task: core.exec
          arguments:
            cmd: |
              gomplate -d defines={{ .TOOLBOX_CONFIG_DEFINES_PROCESSED_FILE_PATH }} \
              --input-dir={{ .TOOLBOX_CONFIG_TEMPLATES_DIR }} \
              --output-dir={{ .TOOLBOX_CONFIG_RENDERED_DIR }}
        tasks:
          stdin:
            parameters:
            - name: json_path
              type: string
            steps:
            - task: core.exec
              arguments:
                cmd: |
                  yq r {{ .TOOLBOX_CONFIG_DEFINES_PROCESSED_FILE_PATH }} -j | \
                  jq -r '{{ .json_path }}' | \
                  gomplate -d defines=stdin:///foo.yaml \
                    --input-dir={{ .TOOLBOX_CONFIG_TEMPLATES_DIR }} \
                    --output-dir={{ .TOOLBOX_CONFIG_RENDERED_DIR }}


  git-secret:
    parameters:
    - name: secret_file
      type: string
    tasks:
      hide:
        steps:
        - task: core.exec
          arguments:
            title: "Git secret :: Hide secret"
            cmd: |
              git secret hide {{ .secret_file }}
      reveal:
        steps:
        - task: core.exec
          arguments:
            title: "Git secret :: Reveal secret"
            cmd: |
              git secret reveal -f {{ .secret_file }}
      delete:
        steps:
        - task: core.exec
          arguments:
            title: "Git secret :: Remove secret file"
            cmd: |
              rm {{ .secret_file }}

  gpg:
    bindParamsFromEnv: true
    parameters:
    - name: gpg_key_file
      type: string
    tasks:
      import_key:
        steps:
        - task: core.exec
          arguments:
            title: "GPG :: Import key"
            cmd: |
              gpg --batch --import {{ .gpg_key_file }}


